/* Hide the index.html Vue content while it compiles */
[v-cloak] {
    display: none
}

#scan_picker {
    margin: auto;
    width: 50%;
    border: 3px solid #888;
    padding: 10px;
}

#app {
    min-height: 100%;
    min-width: 100%;
}

canvas {
    display: inline-block;
    vertical-align: top;
    position: absolute;
    z-index: -1;
    /* margin-left: 20%; */
    height: 100%;
}

#data_display_wrapper {
    /* display: inline-block; */
    vertical-align: top;
}

#data_display {
    /* Critical layout */
    position: absolute;
    height: 100%;
    display: flex;
    flex-direction: column;
    overflow-y: scroll;
    /* TODO custom overflow-y styling */
    z-index: 10;
    /* Non-critical apperance  */
    padding: 0.25em;
    border: groove;
    overflow-wrap: break-word;
}

#landmark_nametag_wrapper span {
    position: absolute;
    background-color: black;
}

/* TODO make this responsive design */
/* canvas {
    width: 80%;
    max-width: 80%;
} */
#data_display_wrapper {
    width: 20%;
}
#data_display {
    max-width: 20%;
    width: 20%;
}

#data_display_wrapper.closed {
    max-width: 0%;
    width: 0%;
}

#data_display_wrapper.closed #data_display{
    max-width: 0%;
    width: 0%;
    display:none;
}

#data_display_wrapper.closed ~ canvas {
    width: 100%;
    max-width: 100%;
}


/* debug */

#app > div.dg.main > div {
    /* z-index: 10; */
}

#app > div.dg.main {
    /* z-index: 10; */
    float: right;
}

.active {
    background-color: orange;
}

/* TODO convert this file into scss cause it needs more organization. 
    TODO Figure out a correct way to handle on the on click event and hide the data display.
    TODO custom scroll bar
*/
.wrapper_closer{
	position: absolute;
    left: 20%;
    height: 100%;
    width: 15%;
    opacity: 50%;
}

.wrapper_closer:hover{
	position: absolute;
    left: 20%;
    height: 100%;
    width: 15%;
    opacity: 50%;
    background-image: linear-gradient(to right, white , black);
}